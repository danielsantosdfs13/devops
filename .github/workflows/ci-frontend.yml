# This is a basic workflow to help you get started with Actions

name: CI-FRONTEND

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: 
      - frontend-foo
      - frontend-foo-dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Get commit sha_short
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push - frontend (prd)
        if: github.ref == 'refs/heads/frontend-foo'
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.frontend_REPO_NAME }}:latest
            ${{ secrets.frontend_REPO_NAME }}:${{ steps.vars.outputs.sha_short }}

      - name: Build and push - frontend (hml)
        if: github.ref == 'refs/heads/frontend-foo-dev'
        uses: docker/build-push-action@v2
        with:
          context: ./src
          file: ./src/dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.frontend_REPO_NAME }}:latest
  deploy:
    needs: [build]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Get commit sha_short
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
      
      - uses: azure/setup-kubectl@v1
        # with:
          # version: '<version>' # default is latest stable
        id: install      

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1        

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Helm - Deploy Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm upgrade devops-ingress ingress-nginx/ingress-nginx --install

      - name: Cria namespace
        run: kubectl apply -f utils/deploy/kubectl/ns.yaml
                  
      - name: Helm - Deploy frontend-foo (hml)
        if: github.ref == 'refs/heads/frontend-foo-dev'
        run: |
          helm template frontend-foo utils/deploy/helm/devops -n hml -f src/kubernetes/values.yaml --set image.repository=${{ secrets.frontend_REPO_NAME }},image.tag=latest
          helm upgrade frontend-foo utils/deploy/helm/devops -n hml -f src/kubernetes/values.yaml --set image.repository=${{ secrets.frontend_REPO_NAME }},image.tag=latest --install

      - name: Helm - Deploy frontend-foo (prd)
        if: github.ref == 'refs/heads/frontend-foo'
        run: |
          helm template frontend-foo utils/deploy/helm/devops -n prd -f src/kubernetes/prd-values.yaml --set image.repository=${{ secrets.frontend_REPO_NAME }},image.tag=${{ steps.vars.outputs.sha_short }}
          helm upgrade frontend-foo utils/deploy/helm/devops -n prd -f src/kubernetes/prd-values.yaml --set image.repository=${{ secrets.frontend_REPO_NAME }},image.tag=${{ steps.vars.outputs.sha_short }} --install

      - name: Print loadbalancer endpoint
        run: |
          kubectl get svc devops-ingress-ingress-nginx-controller | awk 'NR>1 {print $4}'

      - name: Lista all pods (hml)
        if: github.ref == 'refs/heads/frontend-foo-dev'
        run: kubectl get pods -n hml
      
      - name: Lista all pods (prd)
        if: github.ref == 'refs/heads/frontend-foo'
        run: kubectl get pods -n prd

      - name: Remove kubeconfig
        run: rm -rf /home/runner/.kube/config
